{"version":3,"sources":["services/api.js","components/Categories.jsx","components/SearchCard.jsx","components/Home.js","components/ItemsCart.jsx","components/Carrinho.js","components/ProductRating.jsx","components/Detalhes.jsx","components/Checkout.jsx","App.js","serviceWorker.js","index.js"],"names":["getCategories","a","fetch","fetchApi","json","receberJson","getProductsFromCategoryAndQuery","categoryId","query","Categories","props","state","status","categories","then","cat","setState","filterId","this","map","id","name","key","htmlFor","data-testid","type","onClick","Component","SearchCard","result","response","addToCart","handleCartItemsQuantity","title","thumbnail","price","availableQuantity","available_quantity","freeShipping","shipping","free_shipping","src","alt","to","pathname","detalhes","event","defaultProps","Home","searchbar","emptyResponse","handleClick","bind","filterById","results","length","cartItemsQuantity","onChange","target","value","className","React","ItemsCart","quantity","itemTotalPrice","productInfo","increaseQuantity","decreaseQuantity","disabled","removeProduct","Carrinho","products","item","ProductRating","userRating","Number","placeholder","Rating","cols","rows","maxLength","Detalhes","location","Checkout","fullname","email","cpf","phone","cep","address","userInfoState","console","log","productsInfo","userInfo","App","cartItems","localStorage","removeItem","updateTotalItems","product","every","num","setItem","itemTitle","find","splice","indexOf","path","render","exact","Boolean","window","hostname","match","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.b45713c6.chunk.js","sourcesContent":["export async function getCategories() {\n  const fetchApi = await fetch('https://api.mercadolibre.com/sites/MLB/categories');\n  const receberJson = await fetchApi.json();\n  return receberJson;\n}\n\nexport async function getProductsFromCategoryAndQuery(categoryId, query) {\n  const fetchApi = await fetch(`https://api.mercadolibre.com/sites/MLB/search?category=${categoryId}&q=${query}`);\n  const receberJson = await fetchApi.json();\n  return receberJson;\n}\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { getCategories } from '../services/api';\n\nclass Categories extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      status: 'loading',\n      categories: [],\n    };\n  }\n\n  async componentDidMount() {\n    return getCategories().then((cat) => this.setState({\n      categories: cat,\n      status: '',\n    }));\n  }\n\n  render() {\n    const { filterId } = this.props;\n    const { categories, status } = this.state;\n    if (status === 'loading') return <div>Loading ...</div>;\n    return (\n      <div>\n        Categorias:\n        { categories.map(({ id, name }) => (\n          <div key={ id }>\n            <label htmlFor={ name }>\n              <input\n                data-testid=\"category\"\n                type=\"radio\"\n                name=\"filters\"\n                onClick={ () => filterId(id) }\n              />\n              { name }\n            </label>\n          </div>\n        ))}\n      </div>\n    );\n  }\n}\n\nCategories.propTypes = {\n  filterId: PropTypes.func,\n}.isRequired;\n\nexport default Categories;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\n\nclass SearchCard extends Component {\n  render() {\n    const { result, response, addToCart, handleCartItemsQuantity } = this.props;\n    if (response) return <div>Nenhum produto foi encontrado</div>;\n    return (\n      result.map(({\n        title,\n        thumbnail,\n        price,\n        id,\n        available_quantity: availableQuantity,\n        shipping: {\n          free_shipping: freeShipping,\n        },\n      }) => (\n        <div data-testid=\"product\" key={ id }>\n          <h4>{ title }</h4>\n          <img src={ thumbnail } alt={ title } />\n          <p>{`R$ ${price}`}</p>\n          <p>\n            Quantidade em estoque:\n            { availableQuantity }\n          </p>\n          { freeShipping && <h4 data-testid=\"free-shipping\">Frete grátis</h4>}\n          <Link\n            data-testid=\"product-detail-link\"\n            to={ {\n              pathname: `/${id}/detalhes`,\n              state: {\n                detalhes: {\n                  id, price, thumbnail, title, availableQuantity, freeShipping },\n              },\n            } }\n          >\n            Ver detalhes\n          </Link>\n          <button\n            data-testid=\"product-add-to-cart\"\n            type=\"button\"\n            onClick={ (event) => {\n              addToCart({\n                title, thumbnail, price, id, availableQuantity, freeShipping }, event);\n              handleCartItemsQuantity(1);\n            } }\n          >\n            Adicionar ao carrinho\n          </button>\n        </div>\n      ))\n    );\n  }\n}\n\nSearchCard.propTypes = {\n  result: PropTypes.arrayOf(PropTypes.object),\n  response: PropTypes.bool.isRequired,\n  addToCart: PropTypes.func.isRequired,\n  handleCartItemsQuantity: PropTypes.func.isRequired,\n};\n\nSearchCard.defaultProps = {\n  result: [],\n};\n\nexport default SearchCard;\n","import React from 'react';\n\nimport PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\n\nimport Categories from './Categories';\nimport SearchCard from './SearchCard';\nimport { getProductsFromCategoryAndQuery } from '../services/api';\n\nclass Home extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      searchbar: '',\n      response: [],\n      emptyResponse: false,\n      filterId: '',\n    };\n    this.handleClick = this.handleClick.bind(this);\n    this.filterById = this.filterById.bind(this);\n  }\n\n  async handleClick() {\n    const { searchbar, filterId } = this.state;\n    getProductsFromCategoryAndQuery(filterId, searchbar).then(({ results }) => {\n      if (searchbar.length > 0 && results.length === 0) {\n        this.setState({\n          emptyResponse: true,\n        });\n      } else {\n        this.setState({\n          emptyResponse: false,\n          response: results,\n        });\n      }\n    });\n  }\n\n  filterById(id) {\n    this.setState({ filterId: id }, () => this.handleClick());\n  }\n\n  render() {\n    const { response, emptyResponse } = this.state;\n    const { addToCart, handleCartItemsQuantity, cartItemsQuantity } = this.props;\n    return (\n      <>\n        <section>\n          <input\n            data-testid=\"query-input\"\n            onChange={ (event) => this.setState({\n              searchbar: event.target.value,\n            }) }\n          />\n          <button\n            data-testid=\"query-button\"\n            type=\"button\"\n            onClick={ this.handleClick }\n          >\n            Pesquisar\n          </button>\n          <Link data-testid=\"shopping-cart-button\" to=\"/carrinho\">\n            <i className=\"fas fa-shopping-cart\" />\n            <span data-testid=\"shopping-cart-size\">{cartItemsQuantity}</span>\n          </Link>\n        </section>\n        <section>\n          <p data-testid=\"home-initial-message\">\n            Digite algum termo de pesquisa ou escolha uma categoria.\n          </p>\n        </section>\n        <section>\n          <Categories\n            filterId={ this.filterById }\n            handleCartItemsQuantity={ handleCartItemsQuantity }\n          />\n        </section>\n        <section>\n          <SearchCard\n            result={ response }\n            response={ emptyResponse }\n            addToCart={ addToCart }\n            handleCartItemsQuantity={ handleCartItemsQuantity }\n          />\n        </section>\n      </>\n    );\n  }\n}\n\nHome.propTypes = {\n  addToCart: PropTypes.func,\n}.isRequired;\n\nexport default Home;\n","import React, { Component } from 'react';\n\nimport PropTypes from 'prop-types';\n\nclass ItemsCart extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      quantity: 1,\n      itemTotalPrice: props.productInfo.price,\n    };\n    this.increaseQuantity = this.increaseQuantity.bind(this);\n    this.decreaseQuantity = this.decreaseQuantity.bind(this);\n  }\n\n  increaseQuantity(price, event) {\n    const {\n      productInfo: {\n        availableQuantity,\n      },\n    } = this.props;\n    const { quantity } = this.state;\n    if (quantity === availableQuantity) {\n      event.target.disabled = true;\n    } else {\n      this.setState(({ itemTotalPrice }) => ({\n        quantity: quantity + 1,\n        itemTotalPrice: itemTotalPrice + price,\n      }));\n    }\n  }\n\n  decreaseQuantity(price) {\n    const { productInfo: { title }, removeProduct } = this.props;\n    const { quantity } = this.state;\n    if (quantity === 1) {\n      return removeProduct(title);\n    }\n    this.setState(({ itemTotalPrice }) => ({\n      quantity: quantity - 1,\n      itemTotalPrice: itemTotalPrice - price,\n    }));\n  }\n\n  render() {\n    const { productInfo: {\n      title, thumbnail, price, availableQuantity, freeShipping,\n    }, removeProduct, handleCartItemsQuantity } = this.props;\n    const { quantity } = this.state;\n    return (\n      <div data-testid=\"product\">\n        <h4 data-testid=\"shopping-cart-product-name\">{ title }</h4>\n        <button\n          type=\"button\"\n          onClick={ () => removeProduct(title) }\n        >\n          X\n        </button>\n        <div>\n          <img src={ thumbnail } alt={ title } />\n        </div>\n        <p>{`R$ ${price * quantity}`}</p>\n        <p>\n          Quantidade em estoque:\n          { availableQuantity }\n        </p>\n        { freeShipping && <h4 data-testid=\"free-shipping\">Frete grátis</h4>}\n        <button\n          data-testid=\"product-increase-quantity\"\n          type=\"button\"\n          onClick={ (event) => {\n            this.increaseQuantity(price, event);\n            handleCartItemsQuantity(1);\n          } }\n        >\n          +\n        </button>\n        <span data-testid=\"shopping-cart-product-quantity\">{quantity}</span>\n        <button\n          data-testid=\"product-decrease-quantity\"\n          type=\"button\"\n          onClick={ () => {\n            const magicNumber = -1;\n            this.decreaseQuantity(price);\n            handleCartItemsQuantity(magicNumber);\n          } }\n        >\n          -\n        </button>\n      </div>\n    );\n  }\n}\n\nItemsCart.propTypes = {\n  productInfo: PropTypes.shape({\n    title: PropTypes.string,\n    thumbnail: PropTypes.string,\n    price: PropTypes.number,\n    availableQuantity: PropTypes.number,\n    freeShipping: PropTypes.bool,\n  }),\n  removeProduct: PropTypes.func.isRequired,\n  handleCartItemsQuantity: PropTypes.func.isRequired,\n};\n\nItemsCart.defaultProps = {\n  productInfo: {},\n};\n\nexport default ItemsCart;\n","import React from 'react';\n\nimport PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\nimport ItemsCart from './ItemsCart';\n\nclass Carrinho extends React.Component {\n  render() {\n    const { products, removeProduct, handleCartItemsQuantity } = this.props;\n    if (products.length > 0) {\n      return (\n        <section>\n          { products.map((item) => (\n            <ItemsCart\n              key={ item.id }\n              productInfo={ item }\n              removeProduct={ removeProduct }\n              handleCartItemsQuantity={ handleCartItemsQuantity }\n            />\n          ))}\n          {/* <h3>\n            {`Total: R$ ${products.reduce((total, item) => total + (item.price), 0)}`}\n          </h3> */}\n          <Link to=\"/checkout\" data-testid=\"checkout-products\"> Finalizar Compra </Link>\n        </section>\n      );\n    }\n    return (\n      <section>\n        <span data-testid=\"shopping-cart-empty-message\">Seu carrinho está vazio</span>\n      </section>\n    );\n  }\n}\n\nCarrinho.propTypes = {\n  products: PropTypes.arrayOf(PropTypes.object),\n  removeProduct: PropTypes.func.isRequired,\n  handleCartItemsQuantity: PropTypes.func.isRequired,\n};\n\nCarrinho.defaultProps = {\n  products: [],\n};\n\nexport default Carrinho;\n","import React, { Component } from 'react';\nimport Rating from '@material-ui/lab/Rating';\n\nclass ProductRating extends Component {\n  constructor() {\n    super();\n    this.state = {\n      value: null,\n    };\n\n    this.userRating = this.userRating.bind(this);\n  }\n\n  userRating(event) {\n    this.setState({ value: Number(event.target.value) });\n  }\n\n  render() {\n    const { value } = this.state;\n    return (\n      <form>\n        <h3> Avaliação </h3>\n        <fieldset>\n          <input type=\"text\" placeholder=\"Email\" />\n          <Rating\n            name=\"user-rating\"\n            value={ value }\n            onClick={ this.userRating }\n          />\n          <div>\n            <label htmlFor=\"user-email\">\n              <textarea\n                data-testid=\"product-detail-evaluation\"\n                cols=\"30\"\n                rows=\"5\"\n                maxLength=\"1000\"\n                placeholder=\"Mensagem (opcional)\"\n              />\n            </label>\n          </div>\n        </fieldset>\n      </form>\n    );\n  }\n}\n\nexport default ProductRating;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport ProductRating from './ProductRating';\n\nclass Detalhes extends React.Component {\n  render() {\n    const {\n      addToCart,\n      handleCartItemsQuantity,\n      cartItemsQuantity,\n      location: {\n        state: {\n          detalhes: {\n            id,\n            price,\n            thumbnail,\n            title,\n            availableQuantity,\n            freeShipping,\n          },\n        },\n      },\n    } = this.props;\n    return (\n      <div data-testid=\"product\" key={ id }>\n        <Link data-testid=\"shopping-cart-button\" to=\"/carrinho\">\n          <i className=\"fas fa-shopping-cart\" />\n          <span data-testid=\"shopping-cart-size\">{cartItemsQuantity}</span>\n        </Link>\n        <h4 data-testid=\"product-detail-name\">{ title }</h4>\n        <img src={ thumbnail } alt={ title } />\n        <p>{`R$ ${price}`}</p>\n        <p>\n          Quantidade em estoque:\n          { availableQuantity }\n        </p>\n        { freeShipping && <h4 data-testid=\"free-shipping\">Frete grátis</h4>}\n        <button\n          data-testid=\"product-detail-add-to-cart\"\n          type=\"button\"\n          onClick={ (event) => {\n            addToCart({ title, thumbnail, price, id, availableQuantity }, event);\n            handleCartItemsQuantity(1);\n          } }\n        >\n          Adicionar ao carrinho\n        </button>\n        <ProductRating />\n      </div>\n    );\n  }\n}\n\nexport default Detalhes;\n\nDetalhes.propTypes = {\n  location: PropTypes.shape({\n    state: PropTypes.shape({\n      detalhes: PropTypes.shape({\n        id: PropTypes.string,\n        price: PropTypes.string,\n        thumbnail: PropTypes.string,\n        title: PropTypes.string,\n        availableQuantity: PropTypes.number,\n      }),\n    }),\n  }),\n}.isRequired;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n// import ItemsCart from './ItemsCart';\n\nclass Checkout extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      fullname: '',\n      email: '',\n      cpf: '',\n      phone: '',\n      cep: '',\n      address: '',\n    };\n    this.userInfoState = this.userInfoState.bind(this);\n  }\n\n  userInfoState(id, event) {\n    const { value } = event.target;\n    this.setState({ [id]: value });\n  }\n\n  productsInfo() {\n    const { products } = this.props;\n    return (\n      <fieldset>\n        <h3>Revise seus produtos</h3>\n        { products.map(({ id, thumbnail, title, price, freeShipping,\n        }) => (\n          <div key={ id }>\n            <h4 data-testid=\"shopping-cart-product-name\">{ title }</h4>\n            <img src={ thumbnail } alt={ title } />\n            <span>{`R$ ${price}`}</span>\n            { freeShipping && <h4 data-testid=\"free-shipping\">Frete grátis</h4>}\n          </div>\n        ))}\n        {/* <div>\n          Preço Total:\n          {` R$ ${products.reduce((total, item) => total + (item.price), 0)}`}\n        </div> */}\n      </fieldset>\n    );\n  }\n\n  userInfo(id, placeholder) {\n    return (\n      <label htmlFor={ `${id}` }>\n        <input\n          type=\"text\"\n          data-testid={ `checkout-${id}` }\n          placeholder={ `${placeholder}` }\n          onChange={ (event) => this.userInfoState(id, event) }\n        />\n      </label>\n    );\n  }\n\n  render() {\n    const { fullname, email, cpf, phone, cep, address } = this.state;\n    console.log(fullname, email, cpf, phone, cep, address);\n    return (\n      <section>\n        <form>\n          { this.productsInfo() }\n          <fieldset>\n            <h3>Informações do comprador</h3>\n            { this.userInfo('fullname', 'Nome Completo') }\n            { this.userInfo('email', 'Email') }\n            { this.userInfo('cpf', 'CPF') }\n            { this.userInfo('phone', 'Telefone') }\n            { this.userInfo('cep', 'CEP') }\n            { this.userInfo('address', 'Endereço') }\n            <button type=\"button\">Comprar</button>\n          </fieldset>\n        </form>\n      </section>\n    );\n  }\n}\n\nexport default Checkout;\n\nCheckout.propTypes = {\n  products: PropTypes.arrayOf(PropTypes.object),\n};\n\nCheckout.defaultProps = {\n  products: [],\n};\n","import React, { Component } from 'react';\nimport { BrowserRouter, Route, Switch } from 'react-router-dom';\nimport Home from './components/Home';\nimport Carrinho from './components/Carrinho';\nimport Detalhes from './components/Detalhes';\nimport Checkout from './components/Checkout';\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      cartItems: [],\n      cartItemsQuantity: Number(localStorage.cartItemsQuantity) || 0,\n    };\n\n    this.addToCart = this.addToCart.bind(this);\n    this.removeItem = this.removeItem.bind(this);\n    this.updateTotalItems = this.updateTotalItems.bind(this);\n  }\n\n  addToCart(product) {\n    const { cartItems } = this.state;\n    // event.target.disabled = true;\n    if (cartItems.length > 0) {\n      return cartItems.every(({ id }) => id !== product.id)\n        && this.setState({ cartItems: [...cartItems, product] });\n    }\n    this.setState({ cartItems: [...cartItems, product] });\n  }\n\n  updateTotalItems(num) {\n    this.setState(({ cartItemsQuantity }) => ({\n      cartItemsQuantity: cartItemsQuantity + Number(num),\n    }), () => {\n      const { cartItemsQuantity } = this.state;\n      localStorage.setItem('cartItemsQuantity', Number(cartItemsQuantity));\n    });\n  }\n\n  removeItem(itemTitle) {\n    const { cartItems } = this.state;\n    const item = cartItems.find(({ title }) => title === itemTitle);\n    cartItems.splice(cartItems.indexOf(item), 1);\n    this.setState({ cartItems });\n  }\n\n  render() {\n    const { cartItems, cartItemsQuantity } = this.state;\n    return (\n      <main>\n        <BrowserRouter>\n          <Switch>\n            <Route\n              path=\"/carrinho\"\n              render={ () => (\n                <Carrinho\n                  products={ cartItems }\n                  removeProduct={ this.removeItem }\n                  handleCartItemsQuantity={ this.updateTotalItems }\n                />) }\n            />\n            <Route\n              path=\"/checkout\"\n              render={ () => <Checkout products={ cartItems } /> }\n            />\n            <Route\n              path=\"/:id/detalhes\"\n              render={ (props) => (\n                <Detalhes\n                  { ...props }\n                  addToCart={ this.addToCart }\n                  handleCartItemsQuantity={ this.updateTotalItems }\n                  cartItemsQuantity={ cartItemsQuantity }\n                />) }\n            />\n            <Route\n              exact\n              path=\"/\"\n              render={ () => (\n                <Home\n                  cartItemsQuantity={ cartItemsQuantity }\n                  addToCart={ this.addToCart }\n                  handleCartItemsQuantity={ this.updateTotalItems }\n                />) }\n            />\n          </Switch>\n        </BrowserRouter>\n      </main>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost'\n    // [::1] is the IPv6 localhost address.\n    || window.location.hostname === '[::1]'\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    || window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/,\n    ),\n);\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all '\n                  + 'tabs for this page are closed. See https://bit.ly/CRA-PWA.',\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  const NOT_FOUND = 404;\n  const NOT_FOUND_IN_ARRAY = -1;\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  }).then((response) => {\n    // Ensure service worker exists, and that we really are getting a JS file.\n    const contentType = response.headers.get('content-type');\n    if (response.status === NOT_FOUND\n        || (contentType != null\n          && contentType.indexOf('javascript') === NOT_FOUND_IN_ARRAY)) {\n      // No service worker found. Probably a different app. Reload the page.\n      navigator.serviceWorker.ready.then((registration) => {\n        registration.unregister().then(() => {\n          window.location.reload();\n        });\n      });\n    } else {\n      // Service worker found. Proceed as normal.\n      registerValidSW(swUrl, config);\n    }\n  })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.',\n      );\n    });\n}\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service '\n              + 'worker. To learn more, visit https://bit.ly/CRA-PWA',\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}